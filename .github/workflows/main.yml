name: Update Resume

on:
  schedule:
    - cron: '0 0 * * 0' # Runs every Sunday at midnight UTC
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  generate-pdf:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v3
      with: 
        token: ${{ secrets.PUSH_TOKEN }}
    
    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    # Step 3: Install dependencies
    - name: Install Dependencies
      run: |
        pip install -r requirements.txt

    # Step 4: Run the updater script
    - name: Run Updater Script
      env:
        TOKEN: ${{ secrets.TOKEN }}
        LINKEDIN_API_KEY: ${{ secrets.LINKEDIN_API_KEY }}
        LINKEDIN_PROFILE_URL: https://www.linkedin.com/in/rahul-marban
      run: python updater.py

    # Step 5: Cache Docker image
    - name: Cache Docker image
      id: cache
      uses: actions/cache@v3
      with:
        path: /tmp/.docker-cache
        key: ${{ runner.os }}-docker-${{ hashFiles('Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-docker-

    # Step 6: Pull Docker image if cache is not available
    - name: Pull Docker image
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        docker pull danteev/texlive
        mkdir -p /tmp/.docker-cache
        docker save danteev/texlive | gzip > /tmp/.docker-cache/texlive.tar.gz

    # Step 7: Load Docker image from cache
    - name: Load Docker image from cache
      if: steps.cache.outputs.cache-hit == 'true'
      run: |
        gunzip -c /tmp/.docker-cache/texlive.tar.gz | docker load

    # Step 8: Compile LaTeX to PDF using Docker
    - name: Run pdflatex in Docker
      run: |
        docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace danteev/texlive pdflatex resume.tex

    # Step 9: Commit and Push Changes
    - name: Commit and Push Changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m '[AUTO]: Updated resume'
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.PUSH_TOKEN }}

    # Step 10: Upload PDF and LaTeX files
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: resume
        path: |
          resume.pdf
          resume.tex